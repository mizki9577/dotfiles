[[plugins]]
repo = 'Shougo/unite.vim'
on_cmd = 'Unite'
hook_source = '''
let g:unite_data_directory = $MYVIMDIR . '/misc/unite'
'''

[[plugins]]
repo = 'Shougo/unite-outline'
depends = 'unite.vim'

[[plugins]]
repo = 'thinca/vim-unite-history'
depends  = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
depends  = 'unite.vim'

[[plugins]]
repo = 'Shougo/neocomplete'
depends = 'vimproc'
on_i = 1
hook_source = '''
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#data_directory = $MYVIMDIR . '/misc/neocomplete'
let g:neocomplete#lock_iminsert = 1

if !exists('g:neocomplete#force_omni_input_patterns')
	let g:neocomplete#force_omni_input_patterns = {}
endif
let g:neocomplete#force_omni_input_patterns.python = '\%([^. \t]\.\|^\s*@\|^\s*from\s.\+import \|^\s*from \|^\s*import \)\w*'
let g:neocomplete#force_omni_input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)\w*'
let g:neocomplete#force_omni_input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'
let g:neocomplete#force_omni_input_patterns.cs = '.*[^=\);]'
'''

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'
depends = ['vim-quickrun', 'shabadou.vim']
on_ft = ['c', 'cpp', 'python', 'javascript']
hook_source = '''
let g:watchdogs_check_BufWritePost_enable = 1

if !exists('g:quickrun_config')
	let g:quickrun_config = {}
endif
let g:quickrun_config['c/watchdogs_checker'] = {
\	'type': 'watchdogs_checker/clang',
\	'cmdopt': '-W -Wall',
\}
let g:quickrun_config['cpp/watchdogs_checker'] = {
\	'type': 'watchdogs_checker/clang++',
\	'cmdopt': '-W -Wall -std=c++1z',
\}
let g:quickrun_config['python/watchdogs_checker'] = {
\	'type': 'watchdogs_checker/flake8',
\}
let g:quickrun_config['javascript/watchdogs_checker'] = {
\	'type': 'watchdogs_checker/eslint',
\}
let g:watchdogs_check_BufWritePost_enables = {
\	'c': 1,
\	'cpp': 1,
\	'python': 1,
\	'php': 1,
\	'javascript': 1,
\}
'''

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_source = '''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_source = '''
let g:jedi#completions_enabled = 0
let g:jedi#auto_vim_configuration = 0
let g:jedi#force_py_version = 3
setl omnifunc=jedi#completions
'''

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = 'python'

[[plugins]]
repo = 'cd01/poshcomplete-vim'
on_ft = 'ps1'
hook_source = '''
setl omnifunc=poshcomplete#CompleteCommand
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
on_ft = ['python', 'javascript', 'c', 'c++']

[[plugins]]
repo =  'justmao945/vim-clang'
on_ft = ['c', 'cpp']
hook_source = '''
let g:clang_auto = 0
let g:clang_c_completeopt = 'menuone,preview'
let g:clang_cpp_completeopt = 'menuone,preview'
let g:clang_cpp_options = '-std=c++1z'
let g:clang_diagsopt = ''
'''

[[plugins]]
repo = 'flowtype/vim-flow'
on_ft = 'javascript'
hook_post_update = '''
!npm install -g flow-bin
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'
hook_post_update = '''
!cargo install racer
'''
hook_source = '''
let g:racer_cmd = '~/.cargo/bin/racer'
let g:racer_experimental_completer = 1
'''
